Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_umulhisi3.o)
                              timer.o (__umulhisi3)
/usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodqi4.o)
                              gear-indicator.o (__udivmodqi4)
/usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodsi4.o)
                              timer.o (__udivmodsi4)
/usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o (exit)
/usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
                              twi-slave.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
                              timer.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

tickCount           0x4               timer.o
messageBuf          0x20              main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800100 0x000000000000ff00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
LOAD timer.o
LOAD twi-slave.o
LOAD gear-indicator.o
LOAD lights.o
LOAD gauges.o
LOAD main.o
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xb84
 *(.vectors)
 .vectors       0x0000000000000000       0x8c /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x000000000000008c       0x8c gear-indicator.o
                0x0000000000000118                . = ALIGN (0x2)
                0x0000000000000118                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000118        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000118                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000118                __ctors_start = .
 *(.ctors)
                0x0000000000000118                __ctors_end = .
                0x0000000000000118                __dtors_start = .
 *(.dtors)
                0x0000000000000118                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000118        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
                0x0000000000000118                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000118        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000124       0x1a /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
                0x0000000000000124                __do_copy_data
 .init4         0x000000000000013e       0x10 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
                0x000000000000013e                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000014e        0x8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
 *(.init9)
 *(.text)
 .text          0x0000000000000156        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
                0x0000000000000156                __vector_22
                0x0000000000000156                __vector_28
                0x0000000000000156                __vector_1
                0x0000000000000156                __vector_32
                0x0000000000000156                __vector_34
                0x0000000000000156                __vector_24
                0x0000000000000156                __vector_12
                0x0000000000000156                __bad_interrupt
                0x0000000000000156                __vector_6
                0x0000000000000156                __vector_31
                0x0000000000000156                __vector_3
                0x0000000000000156                __vector_23
                0x0000000000000156                __vector_30
                0x0000000000000156                __vector_25
                0x0000000000000156                __vector_11
                0x0000000000000156                __vector_13
                0x0000000000000156                __vector_17
                0x0000000000000156                __vector_19
                0x0000000000000156                __vector_7
                0x0000000000000156                __vector_27
                0x0000000000000156                __vector_5
                0x0000000000000156                __vector_4
                0x0000000000000156                __vector_2
                0x0000000000000156                __vector_21
                0x0000000000000156                __vector_15
                0x0000000000000156                __vector_29
                0x0000000000000156                __vector_8
                0x0000000000000156                __vector_26
                0x0000000000000156                __vector_14
                0x0000000000000156                __vector_10
                0x0000000000000156                __vector_16
                0x0000000000000156                __vector_18
                0x0000000000000156                __vector_20
 .text          0x000000000000015a      0x118 timer.o
                0x000000000000015a                __vector_9
                0x00000000000001d2                timer_2_init
                0x00000000000001e8                delay
 .text          0x0000000000000272      0x1d2 twi-slave.o
                0x0000000000000272                TWI_Slave_Initialise
                0x0000000000000282                TWI_Transceiver_Busy
                0x0000000000000288                TWI_Get_State_Info
                0x0000000000000296                TWI_Start_Transceiver_With_Data
                0x00000000000002d0                TWI_Start_Transceiver
                0x00000000000002ee                TWI_Get_Data_From_Transceiver
                0x0000000000000326                __vector_33
 .text          0x0000000000000444      0x358 gear-indicator.o
                0x0000000000000444                gear_indicator_init
                0x0000000000000452                gear_show
                0x00000000000005a6                rotate_left
                0x00000000000005ea                rotate_right
                0x0000000000000624                display_glyph
                0x0000000000000680                gear_isr
 .text          0x000000000000079c      0x16a lights.o
                0x000000000000079c                lights_init
                0x00000000000007a4                lights_illumination
                0x00000000000007b0                lights_highbeam
                0x00000000000007bc                lights_blinker
 .text          0x0000000000000906       0x62 gauges.o
                0x0000000000000906                gauges_init
                0x000000000000093c                gauge_speedo_off
                0x0000000000000946                gauge_tacho_off
                0x0000000000000954                gauge_speedo_on
                0x000000000000095c                gauge_tacho_on
 .text          0x0000000000000968        0x2 main.o
                0x0000000000000968                TWI_Act_On_Failure_In_Last_Transmission
 .text          0x000000000000096a        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_umulhisi3.o)
 .text          0x000000000000096a        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodqi4.o)
 .text          0x000000000000096a        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodsi4.o)
 .text          0x000000000000096a        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
 .text          0x000000000000096a        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
 .text          0x000000000000096a        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
                0x000000000000096a                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x000000000000096a      0x19c main.o
                0x000000000000096a                main
 .text.libgcc.mul
                0x0000000000000b06       0x1e /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_umulhisi3.o)
                0x0000000000000b06                __umulhisi3
 .text.libgcc.div
                0x0000000000000b24        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc   0x0000000000000b24        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.prologue
                0x0000000000000b24        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.builtins
                0x0000000000000b24        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.fmul
                0x0000000000000b24        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.fixed
                0x0000000000000b24        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.mul
                0x0000000000000b24        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodqi4.o)
 .text.libgcc.div
                0x0000000000000b24       0x18 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodqi4.o)
                0x0000000000000b24                __udivmodqi4
 .text.libgcc   0x0000000000000b3c        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodqi4.o)
 .text.libgcc.prologue
                0x0000000000000b3c        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodqi4.o)
 .text.libgcc.builtins
                0x0000000000000b3c        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fmul
                0x0000000000000b3c        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fixed
                0x0000000000000b3c        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodqi4.o)
 .text.libgcc.mul
                0x0000000000000b3c        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.div
                0x0000000000000b3c       0x44 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodsi4.o)
                0x0000000000000b3c                __udivmodsi4
 .text.libgcc   0x0000000000000b80        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.prologue
                0x0000000000000b80        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.builtins
                0x0000000000000b80        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fmul
                0x0000000000000b80        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fixed
                0x0000000000000b80        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.mul
                0x0000000000000b80        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000b80        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000b80        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000b80        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000b80        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000b80        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000b80        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000b80        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000b80        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000b80        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000b80        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000b80        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000b80        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000b80        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000b80        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000b80        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000b80        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000b80        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000b80        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000b80        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000b80        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
                0x0000000000000b80                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000b80        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
                0x0000000000000b80                exit
                0x0000000000000b80                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000b80        0x4 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000b84                _etext = .

.data           0x0000000000800100       0x12 load address 0x0000000000000b84
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
 .data          0x0000000000800100        0x0 timer.o
 .data          0x0000000000800100        0x1 twi-slave.o
 .data          0x0000000000800101        0xe gear-indicator.o
                0x0000000000800101                cycle
 .data          0x000000000080010f        0x0 lights.o
 .data          0x000000000080010f        0x0 gauges.o
 .data          0x000000000080010f        0x2 main.o
                0x000000000080010f                TWI_slaveAddress
 .data          0x0000000000800111        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_umulhisi3.o)
 .data          0x0000000000800111        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodqi4.o)
 .data          0x0000000000800111        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodsi4.o)
 .data          0x0000000000800111        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
 .data          0x0000000000800111        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
 .data          0x0000000000800111        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800112                . = ALIGN (0x2)
 *fill*         0x0000000000800111        0x1 
                0x0000000000800112                _edata = .
                0x0000000000800112                PROVIDE (__data_end, .)

.bss            0x0000000000800112       0x6a
                0x0000000000800112                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800112        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
 .bss           0x0000000000800112        0x0 timer.o
 .bss           0x0000000000800112       0x24 twi-slave.o
                0x0000000000800112                TWI_statusReg
 .bss           0x0000000000800136        0x9 gear-indicator.o
                0x0000000000800136                animate
                0x000000000080013a                glyph
                0x000000000080013e                row_index
 .bss           0x000000000080013f        0x4 lights.o
                0x000000000080013f                lights_status
 .bss           0x0000000000800143        0x0 gauges.o
 .bss           0x0000000000800143       0x15 main.o
                0x0000000000800143                t_twobyte
                0x0000000000800145                t_double
                0x0000000000800149                t_float
                0x000000000080014d                t_long
                0x0000000000800151                t_short
                0x0000000000800153                t_char
 .bss           0x0000000000800158        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_umulhisi3.o)
 .bss           0x0000000000800158        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodqi4.o)
 .bss           0x0000000000800158        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodsi4.o)
 .bss           0x0000000000800158        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
 .bss           0x0000000000800158        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
 .bss           0x0000000000800158        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800158        0x4 timer.o
                0x0000000000800158                tickCount
 COMMON         0x000000000080015c       0x20 main.o
                0x000000000080015c                messageBuf
                0x000000000080017c                PROVIDE (__bss_end, .)
                0x0000000000000b84                __data_load_start = LOADADDR (.data)
                0x0000000000000b96                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080017c        0x0
                0x000000000080017c                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080017c                PROVIDE (__noinit_end, .)
                0x000000000080017c                _end = .
                0x000000000080017c                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000      0x6cc
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o

.stabstr        0x0000000000000000       0x54
 *(.stabstr)
 .stabstr       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 timer.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 twi-slave.o
 .comment       0x0000000000000000       0x12 gear-indicator.o
 .comment       0x0000000000000000       0x12 lights.o
 .comment       0x0000000000000000       0x12 gauges.o
 .comment       0x0000000000000000       0x12 main.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0xc8
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 timer.o
 .debug_aranges
                0x0000000000000020       0x20 twi-slave.o
 .debug_aranges
                0x0000000000000040       0x20 gear-indicator.o
 .debug_aranges
                0x0000000000000060       0x20 lights.o
 .debug_aranges
                0x0000000000000080       0x20 gauges.o
 .debug_aranges
                0x00000000000000a0       0x28 main.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0xff3
 *(.debug_info)
 .debug_info    0x0000000000000000      0x17c timer.o
 .debug_info    0x000000000000017c      0x2c5 twi-slave.o
 .debug_info    0x0000000000000441      0x33b gear-indicator.o
 .debug_info    0x000000000000077c      0x25d lights.o
 .debug_info    0x00000000000009d9      0x133 gauges.o
 .debug_info    0x0000000000000b0c      0x4e7 main.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x0000000000000000      0x7f9
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000       0xf3 timer.o
 .debug_abbrev  0x00000000000000f3      0x18b twi-slave.o
 .debug_abbrev  0x000000000000027e      0x189 gear-indicator.o
 .debug_abbrev  0x0000000000000407      0x17e lights.o
 .debug_abbrev  0x0000000000000585       0x81 gauges.o
 .debug_abbrev  0x0000000000000606      0x1f3 main.o

.debug_line     0x0000000000000000      0x4a6
 *(.debug_line)
 .debug_line    0x0000000000000000       0xa2 timer.o
 .debug_line    0x00000000000000a2       0xfe twi-slave.o
 .debug_line    0x00000000000001a0       0xeb gear-indicator.o
 .debug_line    0x000000000000028b       0x99 lights.o
 .debug_line    0x0000000000000324       0x7f gauges.o
 .debug_line    0x00000000000003a3      0x103 main.o

.debug_frame    0x0000000000000000      0x308
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0xb0 timer.o
 .debug_frame   0x00000000000000b0       0xa8 twi-slave.o
 .debug_frame   0x0000000000000158       0x80 gear-indicator.o
 .debug_frame   0x00000000000001d8       0x98 lights.o
 .debug_frame   0x0000000000000270       0x64 gauges.o
 .debug_frame   0x00000000000002d4       0x34 main.o

.debug_str      0x0000000000000000      0x4fb
 *(.debug_str)
 .debug_str     0x0000000000000000      0x155 timer.o
                                        0x18f (size before relaxing)
 .debug_str     0x0000000000000155      0x148 twi-slave.o
                                        0x270 (size before relaxing)
 .debug_str     0x000000000000029d       0xa0 gear-indicator.o
                                        0x205 (size before relaxing)
 .debug_str     0x000000000000033d       0xac lights.o
                                        0x20d (size before relaxing)
 .debug_str     0x00000000000003e9       0x55 gauges.o
                                        0x19d (size before relaxing)
 .debug_str     0x000000000000043e       0xbd main.o
                                        0x3c3 (size before relaxing)

.debug_loc      0x0000000000000000      0x80c
 *(.debug_loc)
 .debug_loc     0x0000000000000000      0x194 timer.o
 .debug_loc     0x0000000000000194      0x155 twi-slave.o
 .debug_loc     0x00000000000002e9      0x398 gear-indicator.o
 .debug_loc     0x0000000000000681      0x18b lights.o

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x18
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x18 main.o

.debug_macro
 *(.debug_macro)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
TWI_Act_On_Failure_In_Last_Transmission           main.o
TWI_Get_Data_From_Transceiver                     twi-slave.o
                                                  main.o
TWI_Get_State_Info                                twi-slave.o
                                                  main.o
TWI_Slave_Initialise                              twi-slave.o
                                                  main.o
TWI_Start_Transceiver                             twi-slave.o
                                                  main.o
TWI_Start_Transceiver_With_Data                   twi-slave.o
TWI_Transceiver_Busy                              twi-slave.o
                                                  main.o
TWI_slaveAddress                                  main.o
TWI_statusReg                                     twi-slave.o
                                                  main.o
__bad_interrupt                                   /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__bss_end                                         /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
                                                  main.o
                                                  lights.o
                                                  gear-indicator.o
                                                  twi-slave.o
                                                  timer.o
__do_copy_data                                    /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
                                                  main.o
                                                  gear-indicator.o
                                                  twi-slave.o
__heap_end                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__init                                            /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__stack                                           /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__udivmodqi4                                      /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodqi4.o)
                                                  gear-indicator.o
__udivmodsi4                                      /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodsi4.o)
                                                  lights.o
                                                  gear-indicator.o
                                                  timer.o
__umulhisi3                                       /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_umulhisi3.o)
                                                  lights.o
                                                  timer.o
__vector_1                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__vector_10                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__vector_11                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__vector_12                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__vector_13                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__vector_14                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__vector_15                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__vector_16                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__vector_17                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__vector_18                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__vector_19                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__vector_2                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__vector_20                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__vector_21                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__vector_22                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__vector_23                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__vector_24                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__vector_25                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__vector_26                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__vector_27                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__vector_28                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__vector_29                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__vector_3                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__vector_30                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__vector_31                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__vector_32                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__vector_33                                       twi-slave.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__vector_34                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__vector_4                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__vector_5                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__vector_6                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__vector_7                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__vector_8                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__vector_9                                        timer.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__vector_default                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
__vectors                                         /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
_exit                                             /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
animate                                           gear-indicator.o
cycle                                             gear-indicator.o
delay                                             timer.o
                                                  main.o
display_glyph                                     gear-indicator.o
exit                                              /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
gauge_speedo_off                                  gauges.o
                                                  main.o
gauge_speedo_on                                   gauges.o
                                                  main.o
gauge_tacho_off                                   gauges.o
                                                  main.o
gauge_tacho_on                                    gauges.o
                                                  main.o
gauges_init                                       gauges.o
                                                  main.o
gear_indicator_init                               gear-indicator.o
                                                  main.o
gear_isr                                          gear-indicator.o
                                                  timer.o
gear_show                                         gear-indicator.o
                                                  main.o
glyph                                             gear-indicator.o
                                                  main.o
lights_blinker                                    lights.o
                                                  main.o
lights_highbeam                                   lights.o
                                                  main.o
lights_illumination                               lights.o
                                                  main.o
lights_init                                       lights.o
                                                  main.o
lights_status                                     lights.o
main                                              main.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
messageBuf                                        main.o
rotate_left                                       gear-indicator.o
rotate_right                                      gear-indicator.o
row_index                                         gear-indicator.o
t_char                                            main.o
t_double                                          main.o
t_float                                           main.o
t_long                                            main.o
t_short                                           main.o
t_twobyte                                         main.o
tickCount                                         lights.o
                                                  timer.o
timer_2_init                                      timer.o
                                                  main.o
